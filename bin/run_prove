#!/usr/bin/env ruby
require 'common/constants'
require 'utils/senddata'
require 'common/globalvars'
require 'parse/starparser'
require 'time'
require 'fileutils'
require 'senddata/senddatatofaust'
=begin

puts SRecords.SubjectIdentity
h = {
	:one => 1,
	:two => 2
	}
	h[:one]
	h[:three] = 3
l = {
	:four => 4,
	:five => 5
	}
	m = {
	:inner => h,
	:pippo => l
	}
	
hRet = UtilsHash.new
aRet = hRet.to_array(m)

aRet.each do |k|
	puts "#{k}"
end	

myxml = WriteXmlFile.new
myxml.writeFile(1,"pippo")


time = Time.now.to_i
timeHex = time.to_s(16)
  def random_string(length=8)
  chars = 'abcdef0123456789'
  rnd_str = ''
  length.times { rnd_str << chars[rand(chars.size)] }
  rnd_str
  end
stri =  random_string(6).hex
puts random_string(8)
puts stri.to_s(16)
puts timeHex

if !Dir.exists?("ddd")
	FileUtils.mkpath "ddd"
	end
file = File.new("ddd/pippo.file","w+")
file.close

strP="/log/prova"
if strP[0] == File::SEPARATOR
puts "pppppppp " +strP[0]
end

spl=strP.slice(1,strP.size).split(File::SEPARATOR)
puts spl
myhash = {"a" =>1, "b" =>2, "c" =>3, "d" =>4, "e" =>5, "f" =>6}
keyset = Array.new
i = 0
myhash.each do |key,values|
	keyset << key
	break if i >=3
	i += 1
			
end
remainder = {}

keyset.each {|i|  remainder[i] = myhash.delete(i)}


puts remainder
puts myhash


files =File.dirname(__FILE__).to_s
rindex = files.rindex(File::SEPARATOR)
substr = files.slice(0,rindex)
	puts "........... "+substr

str = "/stringa:di_prova=ancora"
if str[0] == ?/
	str = str.slice(1,str.size)
	end
puts str.split(/\/|:|_|=/)
=end

senddata = SendDataToFaust.new

senddata.cleanFiles